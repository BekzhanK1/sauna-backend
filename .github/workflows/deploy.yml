name: Deploy backend

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: deploy-backend
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          script_stop: true
          script: |
            set -euo pipefail
            cd ~/vparu-prod/sauna-backend
            docker compose down || true
            git fetch --all
            git checkout main || git checkout -b main
            git pull origin main
            docker compose up --build -d
            docker system prune -f || true

      # Always run this step (even if deploy failed), and report status
      - name: Notify Telegram
        if: ${{ always() }}
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
          STATUS: ${{ job.status }}                              # success | failure | cancelled
          REPO: ${{ github.repository }}
          REF: ${{ github.ref_name }}
          SHA: ${{ github.sha }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          if [ "$STATUS" = "success" ]; then
            ICON="✅"; TITLE="Deploy succeeded"
          elif [ "$STATUS" = "cancelled" ]; then
            ICON="⚠️"; TITLE="Deploy cancelled"
          else
            ICON="❌"; TITLE="Deploy failed"
          fi
          SHORT_SHA="${SHA::7}"
          TEXT="$ICON *$TITLE*\nRepo: \`$REPO\`\nBranch: \`$REF\`\nCommit: \`$SHORT_SHA\`\nRun: $RUN_URL"
          curl -sS -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TG_CHAT_ID}" \
            -d text="$TEXT" \
            -d parse_mode="Markdown" \
            -d disable_web_page_preview=true
